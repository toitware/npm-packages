# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

env:
  NODE_VERSION: 15.x

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - run: yarn install
    - run: yarn test

  build-and-publish:
    runs-on: ubuntu-latest

    needs: [ test ]
    if: github.ref == 'refs/heads/master'

    strategy:
      matrix:
        package: [testing-utils, code-block]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
    - run: yarn install
      working-directory: packages/${{ matrix.package }}
    - run: yarn build
      working-directory: packages/${{ matrix.package }}

    # Ideally all of the following code is handled by a GitHub action, but
    # unfortunately the npm-publish action has issues when tagging the release.
    - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
    - name: Get current version in registry
      uses: martinbeentjes/npm-get-version-action@v1.1.0
      id: registry-version
      with:
        path: packages/${{ matrix.package }}/
    - name: Get current version in package.json
      uses: nyaa8/package-version@v1
      with:
        path: packages/${{ matrix.package }}/package.json

    - name: Publish new version if versions differ
      if: ${{ steps.registry-version.outputs.current-version != env.PACKAGE_VERSION }}
      run: yarn publish --access restricted
      working-directory: packages/${{ matrix.package }}